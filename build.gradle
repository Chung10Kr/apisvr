plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.1'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'apisvr'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

dependencies {
	implementation('org.springframework.boot:spring-boot-starter-web')
	implementation('org.springframework.boot:spring-boot-starter-jdbc')
	implementation ('org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.1')
	implementation('org.springframework.boot:spring-boot-starter-data-jpa')

	// Spring boot 3.x이상에서 QueryDsl 패키지를 정의하는 방법
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	runtimeOnly('org.postgresql:postgresql')
	runtimeOnly('com.h2database:h2:2.1.214')

	testImplementation('org.springframework.boot:spring-boot-starter-test')
	testImplementation('org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.1')

	/* Lombok */
	compileOnly('org.projectlombok:lombok')
	annotationProcessor('org.projectlombok:lombok')
	testCompileOnly('org.projectlombok:lombok')
	testAnnotationProcessor('org.projectlombok:lombok')
}

compileJava {
	options.annotationProcessorPath = configurations.annotationProcessor
}

tasks.named('test') {
	useJUnitPlatform()
}

// === ⭐ QueryDsl 빌드 옵션 (선택) ===
def querydslDir = "$buildDir/generated/querydsl"
sourceSets {
	main.java.srcDirs += [ querydslDir ]
}
tasks.withType(JavaCompile) {
	options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
}
clean.doLast {
	file(querydslDir).deleteDir()
}